#day05

break 명령
	==> 반복문과 switch~case에서만 사용하는 명령으로
		의미는 즉시해당 명령을 종료하세요. 라는 의미이다.
		
참고 ]
	문자열 변수의 데이터는 내용이 없는 ("")도 초기화가 가능하다.
	
	그리고 문자열 + 기본데이터 ==> 문자열이 나온다.
	
	따라서
	문자를 문자열로 바꾸는 가장 쉬운 방법은
		문자 + "";
		
참고 ]
	필요한 경우 반복문 안에 다시 반복문이 들어갈 수 있다.
	
-----------------------------------------------------------------------
While

	형식 ]
		while(조건식){
			처리내용;
		}
		
		참고 ]
			 for 반복문 형식 ]
			 	
			 	for(카운트 변수 선언 & 초기화 ; 조건식 ; 카운트변수 증감식){
			 		처리내용
			 	}
			 	
	==> 
		많이 사용되는 형식 ]
		
			int i = 0 ;
			
			while(i < 횟수){
				처리내용
				
				i++;
			}
	의미 ]
		조건식이 참이면 처리내용을 반복해서 처리하세요.
		
		따라서 조건식에 true라고 적으면 무한하게 반복하라는 이야기이고
		이런 경우 무한루프문이 만들어진다.
		
	주의 ]
		for 반복문과의 가장 큰 차이점은
		for 반복문은 형식자체에 반복할 횟수를 지정할 카운트변수가
		형식에 선언이 되지만
		while 반복문에서는 카운트 변수 선언이 없고
		따라서 반복문 이전에 카운트 변수를 먼저 선언해주고
		
		그리고
		for 반복문의 경우는 증감식이 형식에 포함이 되어있지만
		while 반복문에서는 증감식이 형식에 없기 때문에
		블럭({}) 안에서 증감식을 넣어줘야 한다.
		
	참고 ]
		while 명령에서는 반드시 종료조건이 기술되어야 한다.
	
-----------------------------------------------------------------------
do ~ while 반복문
==> for,while 반복문은 선조건 처리 명령인데
	do ~ while 명령은 후조건 처리 명령이다.

	따라서 적어도 처리내용을 한번은 처리하는 반복문...
	
	형식 ]
		do {
			처리내용
		} while (조건식);
		
	일반적인 사용형식 ]
	
		카운트변수 선언 초기화;
		do{
			처리내용;
			...
			카운트변수 증감식;
		} while(조건식);

-----------------------------------------------------------------------

연습문제 ]
	1.
		1 ~ 20 까지의 합을 출력해주는 프로그램을 작성하세요.
	
	2. 
		1 ~ 7까지의 곱을 출력해주는  프로그램을 작성하세요.
	
	3.
		1, -2, 3, -4, 5, ......
		
		이렇게 수가 만들어질경우
		각수의 합이 최초로 100 이상이 되는 수는 몇인지 출력하고
		합도 출력하세요.
		
		힌트 ]
			
			-1 = 1 * -1
			1 = -1 * -1;
			
			==> 
			
			int no = -1;
			
			for(int i = 0; true ; i++){
				no = no * -1;
				
				int num = (i+1) * no;
				
			}
		
-----------------------------------------------------------------------

continue 명령
==>	break 명령과 마찬가지로
	반복문에서 사용하는 명령으로
		다음회차로 즉시 진행시키는 명령
		
-----------------------------------------------------------------------

레이블(label)이 붙은 for 명령
==> continue와 break 명령은 직접 감싸고있는 반복문에 영향을 주는 제어 명령이다.
	이때 직접 감싸지는 않지만 바깥의 반복문을 제어할 목적으로 만들어놓은 문법이다.
	
	형식 ]
		
		라벨이름1;
		for(;;){	
			라벨이름2;
			for(;;){
				for(;;){
					if(조건식){
						break 라벨이름1;	
						==> 라빌이름1이 붙은 반복문을 즉시 종료하세요..
					}
					
					if(조건식2){
						continue 라벨이름2;	
						==> 라벨이름2가 붙은 반복문의 다음회차로 진행하세요...
					}
				}
			}
			
		for(;;){
			if(조건식){
				break 라벨이름2;	------	X
			}
	}		
			

-----------------------------------------------------------------------